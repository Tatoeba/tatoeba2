#!/bin/bash

# This script is used to uniformly draw 3-letter ISO codes on the side of
# some language icons. It operates by pasting an autogenerated image of
# the 3-letter code over an existing source flag. The 3-letter image is
# generated by using Inkscape's "text to path" conversion function.
#
# To add a new flag that consists of an existing flag with 3-letter code
# on the side, just add another gen_flag line at the end and re-run this
# script.

set -e

confirm_has_dep() {
  if ! which "$1" >/dev/null 2>&1; then
    echo "This tool requires $1, please install it"
    exit 1
  fi
}

confirm_has_font() {
  local fontfamilystyle="$1"
  confirm_has_dep fc-list
  if ! fc-list : family style|grep -q "^$fontfamilystyle$"; then
    echo "This tool requires the font $fontfamilystyle, please install it"
    exit 1
  fi
}

svg_template_sidesmall() {
  local iso_code="$1" include="$2"
  cat <<EOF
<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<svg
   width="30"
   height="20"
   version="1.1"
   xmlns="http://www.w3.org/2000/svg"
   xmlns:svg="http://www.w3.org/2000/svg">
  $include
  <path
     fill="#fff"
     d="M19 0h11v20H19z" />
  <text
     transform="rotate(-90) scale(0.1 0.1)"
     style="font-style:normal;font-size:95.8636px;font-family:'Roboto Mono';font-weight:bold;-inkscape-font-specification:'Roboto Mono, Bold';letter-spacing:5px;fill:black;dominant-baseline:middle;text-anchor:middle"
     x="-100"
     y="253.8"
     >$iso_code</text>
</svg>
EOF
}

svg_template_bigfront() {
  local iso_code="$1"
  cat <<EOF
<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<svg
   width="30"
   height="20"
   version="1.1"
   xmlns="http://www.w3.org/2000/svg"
   xmlns:svg="http://www.w3.org/2000/svg">
  <path
     fill="#fff"
     d="M0 0h30v20H0z" />
  <text
     transform="scale(0.1 0.1)"
     style="font-style:normal;font-size:151.058px;font-family:'Roboto Mono';font-weight:bold;-inkscape-font-specification:'Roboto Mono, Bold';fill:black;dominant-baseline:middle;text-anchor:middle"
     x="150"
     y="113.8"
     >$iso_code</text>
</svg>
EOF
}

strip_attr() {
  local attr="$1" tag="$2"
  if [ -z "$tag" ]; then
    sed "s/ $attr=\"[^\"]\+\"//g"
  else
    sed "s/\(<$tag[^<]*\) $attr=\"[^\"]\+\"/\1/g"
  fi
}

strip_leading_zeros() {
  sed 's/\([^0-9]\)0\+\./\1\./g'
}

compact_decimals() {
  sed ':loop;
       s/\(\.[0-9]\+\) \+\(\.\)/\1\2/g;
       t loop'
}

minify_svg() {
  scour --enable-id-stripping \
        --protect-ids-noninkscape \
        --set-precision=5 \
        --no-line-breaks \
        --strip-xml-space \
        2>/dev/null \
    | strip_leading_zeros \
    | compact_decimals \
    | strip_attr dominant-baseline \
    | strip_attr aria-label \
    | strip_attr encoding \
    | strip_attr version svg
}

generate_iso_svg() {
  local template

  template="$1"; shift
  svg_template_${template} "$@" \
    | inkscape --export-text-to-path \
               --pipe \
               --export-filename=- \
               --export-type=svg \
    | minify_svg
}

svg2symbol() {
  local id="$1" filename="$2"
  cat "$filename" \
    | tr -d '\n' \
    | sed 's,.*<svg,<symbol,;s,</svg>,</symbol>,' \
    | sed 's,\(<symbol [^>]*\)id="[^"]*",\1,' \
    | sed "s,<symbol,\0 id=\"$id\","
}

confirm_has_dep inkscape
confirm_has_dep scour
confirm_has_font "Roboto Mono:style=Bold"

gen_flag() {
  local iso_code="$1" src="$2"
  local outfile="webroot/img/flags/${iso_code,,}.svg"

  if [ -n "$src" ]; then
    local id=$(basename "$src" | cut -d. -f 1)
    local symbol=$(svg2symbol "$id" "$src")
    local baseflag="$symbol<use href=\"#$id\"/>"
    generate_iso_svg sidesmall "$iso_code" "$baseflag"
  else
    generate_iso_svg bigfront "$iso_code"
  fi | minify_svg > "$outfile"

  echo "Generated $outfile"
}

# Flags consisting of image + small ISO code on the side
gen_flag AOZ webroot/img/flags/ind.svg
gen_flag JAV webroot/img/flags/ind.svg
gen_flag MDR webroot/img/flags/ind.svg
gen_flag TIG webroot/img/flags/Flag_of_Eritrea.svg

# Flags consisting of ISO code only
gen_flag GUW
gen_flag IGS
gen_flag KAS
gen_flag KNC
gen_flag NJO
gen_flag NNB
gen_flag NST
gen_flag SHY
gen_flag SWC
gen_flag TUM
